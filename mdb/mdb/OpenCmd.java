// Automatically generated code.  Edit at your own risk!
// Generated by bali2jak v2002.09.03.

package mdb;
import Jakarta.util.*;
import java.io.*;
import java.util.*;

import util.DBAccess;

public class OpenCmd extends Open {

    final public static int ARG_LENGTH = 1 /* Kludge! */ ;
    final public static int TOK_LENGTH = 3 ;

    public void execute () {
        
    	DBAccess dbInstance = DBAccess.getInstance();
    	String envPath = getSTRING_LITERAL().tokenName();
    	boolean readOnly = false;
    	
    	//Clean path
    	envPath = envPath.substring(1, (envPath.length()-1));
    	
    	// Check if path exists
    	boolean exists = (new File(envPath)).exists();
    	
    	if (!exists) 
    	{
    		File f = new File(envPath);
            boolean created = f.mkdir();
            
            if(!created)
            {
            	System.out.println("Unable to create directory, please create directory structure");
            }
    	}
    	
    	dbInstance.connect(envPath, readOnly);
    	
        super.execute();
    }

    public AstToken getOPEN () {
        
        return (AstToken) tok [0] ;
    }

    public AstToken getSEMI () {
        
        return (AstToken) tok [2] ;
    }

    public AstToken getSTRING_LITERAL () {
        
        return (AstToken) tok [1] ;
    }

    public boolean[] printorder () {
        
        return new boolean[] {true, true, true} ;
    }

    public OpenCmd setParms (AstToken tok0, AstToken tok1, AstToken tok2) {
        
        arg = new AstNode [ARG_LENGTH] ;
        tok = new AstTokenInterface [TOK_LENGTH] ;
        
        tok [0] = tok0 ;            /* OPEN */
        tok [1] = tok1 ;            /* STRING_LITERAL */
        tok [2] = tok2 ;            /* SEMI */
        
        InitChildren () ;
        return (OpenCmd) this ;
    }

}
