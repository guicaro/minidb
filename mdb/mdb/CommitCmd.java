// Automatically generated code.  Edit at your own risk!
// Generated by bali2jak v2002.09.03.

package mdb;
import Jakarta.util.*;
import java.io.*;
import java.util.*;

import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.Transaction;

import util.DBAccess;

public class CommitCmd extends Commit {

    final public static int ARG_LENGTH = 1 /* Kludge! */ ;
    final public static int TOK_LENGTH = 2 ;

    public void execute () {
    	
    	Transaction txn;        
    	DBAccess dbInstance = DBAccess.getInstance();
    	
    	// Get current state of transaction 
    	txn = dbInstance.getTransaction();
    	
    	if(txn == null)
    	{
    		System.out.println("There are no active transactions to commit.");
    	}
    	else
    	{
        	try {
    			txn.commit();
    		} catch (DatabaseException e) {
    			System.out.println("Error commiting transaction: " + e.toString());
    		}
        	
    		dbInstance.invalidateActiveTransaction();
    		
    		System.out.println("Transaction has been commited.");
    	}
    	
        super.execute();
    }

    public AstToken getCOMMIT () {
        
        return (AstToken) tok [0] ;
    }

    public AstToken getSEMI () {
        
        return (AstToken) tok [1] ;
    }

    public boolean[] printorder () {
        
        return new boolean[] {true, true} ;
    }

    public CommitCmd setParms (AstToken tok0, AstToken tok1) {
        
        arg = new AstNode [ARG_LENGTH] ;
        tok = new AstTokenInterface [TOK_LENGTH] ;
        
        tok [0] = tok0 ;            /* COMMIT */
        tok [1] = tok1 ;            /* SEMI */
        
        InitChildren () ;
        return (CommitCmd) this ;
    }

}
